name: OpenShift
env:
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  OPENSHIFT_NAMESPACE: "bomtawep-dev"
  APP_NAME: "bom-order-reactjs"
  APP_PORT: "8081"
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_REGISTRY_USER: ${{ github.actor }}
  IMAGE_REGISTRY_PASSWORD: ${{ github.token }}
  IMAGE_TAGS: "latest"

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
jobs:
  openshift-ci-cd:
    name: Build and deploy to OpenShift
    runs-on: ubuntu-20.04
    environment: production

    outputs:
      ROUTE: ${{ steps.deploy-and-expose.outputs.route }}
      SELECTOR: ${{ steps.deploy-and-expose.outputs.selector }}

    steps:
    - name: Check for required secrets
      uses: actions/github-script@v6
      with:
        script: |
          const secrets = {
            OPENSHIFT_SERVER: `${{ secrets.OPENSHIFT_SERVER }}`,
            OPENSHIFT_TOKEN: `${{ secrets.OPENSHIFT_TOKEN }}`,
          };

          const GHCR = "ghcr.io";
          if (`${{ env.IMAGE_REGISTRY }}`.startsWith(GHCR)) {
            core.info(`Image registry is ${GHCR} - no registry password required`);
          }
          else {
            core.info("A registry password is required");
            secrets["IMAGE_REGISTRY_PASSWORD"] = `${{ secrets.IMAGE_REGISTRY_PASSWORD }}`;
          }

          const missingSecrets = Object.entries(secrets).filter(([ name, value ]) => {
            if (value.length === 0) {
              core.error(`Secret "${name}" is not set`);
              return true;
            }
            core.info(`✔️ Secret "${name}" is set`);
            return false;
          });

          if (missingSecrets.length > 0) {
            core.setFailed(`❌ At least one required secret is not set in the repository. \n` +
              "You can add it using:\n" +
              "GitHub UI: https://docs.github.com/en/actions/reference/encrypted-secrets#creating-encrypted-secrets-for-a-repository \n" +
              "GitHub CLI: https://cli.github.com/manual/gh_secret_set \n" +
              "Also, refer to https://github.com/redhat-actions/oc-login#getting-started-with-the-action-or-see-example");
          }
          else {
            core.info(`✅ All the required secrets are set`);
          }

    - name: Check out repository
      uses: actions/checkout@v3

    - name: Determine app name
      if: env.APP_NAME == ''
      run: |
        echo "APP_NAME=$(basename $PWD)" | tee -a $GITHUB_ENV

    - name: Determine image tags
      if: env.IMAGE_TAGS == ''
      run: |
        echo "IMAGE_TAGS=latest ${GITHUB_SHA::12}" | tee -a $GITHUB_ENV

    #- name: Build from Dockerfile
    #  id: build-image
    #  uses: redhat-actions/buildah-build@v2
    #  with:
    #    image: ${{ env.APP_NAME }}
    #    tags: ${{ env.IMAGE_TAGS }}
    #    dockerfiles: |
    #      ./Dockerfile

    #- name: Push to registry
    #  id: push-image
    #  uses: redhat-actions/push-to-registry@v2
    #  with:
    #    image: ${{ steps.build-image.outputs.image }}
    #    tags: ${{ steps.build-image.outputs.tags }}
    #    registry: ${{ env.IMAGE_REGISTRY }}
    #    username: ${{ env.IMAGE_REGISTRY_USER }}
    #    password: ${{ env.IMAGE_REGISTRY_PASSWORD }}

    - name: Install oc
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        oc: 4

    - name: Log in to OpenShift
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
        openshift_token: ${{ env.OPENSHIFT_TOKEN }}
        insecure_skip_tls_verify: true
        namespace: ${{ env.OPENSHIFT_NAMESPACE }}
        
    #- name: Create and expose app
    #  id: deploy-and-expose
    #  uses: redhat-actions/oc-new-app@v1
    #  with:
    #    app_name: ${{ env.APP_NAME }}
    #    image: ${{ steps.push-image.outputs.registry-path }}
    #    namespace: ${{ env.OPENSHIFT_NAMESPACE }}
    #    port: ${{ env.APP_PORT }}
    - name: Deploy kubernates react
      run: |
        oc apply -f ./deploy/react.yaml
        oc expose svc/react
